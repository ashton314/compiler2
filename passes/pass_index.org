#+TITLE: Pass Index

This compiler consists of several small passes. Since there are so many, this is an index of those passes so you can figure out easily which pass runs when.

* Passes

 - [[file:parser.rkt][Parser]] :: The first pass is the parser: this turns an external, Racket-hosted s-expression into our internal AST

 - [[file:cps_conversion.rkt][CPS Conversion]] :: Converts the program into CPS-style

 - [[file:typer.rkt][Type Inference]] :: Annotates the AST with type information and performs type-saftey analysis

 - (TODO) Free Variable Analysis :: Checks all lambda nodes and fills in free variables; generates closures from lambdas where needed

 - (TODO) Function Hoisting :: Lifts all functions to top level; remembers references

 - [[file:pseudo_codegen.rkt][Intermediate Assembly]] :: Convert program into something like a generic assembly language

 - (TODO) Target Code Emission :: Convert the IR into assembly for a particular architecture

This list will grow as time goes on.
